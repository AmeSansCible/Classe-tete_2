# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_window2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Window2(object):
    def __init__(self):
        super().__init__()
        self.student_counter = 0
        self.student_widgets = []

        #SetupUi configure tous les éléments visuels de l'app
    def setupUi(self, Window2):
        Window2.setObjectName("Window2")
        Window2.resize(800, 600)

        #Création de la fenêtre principale
        self.centralwidget = QtWidgets.QWidget(Window2)
        self.centralwidget.setObjectName("centralwidget")

        #Conteneur pour les étudiants
        self.student_container = QtWidgets.QWidget(self.centralwidget)
        self.student_layout = QtWidgets.QVBoxLayout(self.student_container)
        self.student_layout.setSpacing(10)  # Espacement vertical entre les widgets
        self.student_layout.setContentsMargins(10, 10, 10, 10)  # Marges autour des widgets
        self.student_layout.setAlignment(QtCore.Qt.AlignTop)  # Aligne toutes les lignes en haut
        self.student_container.setGeometry(QtCore.QRect(20, 70, 360, 500))  # Taille du conteneur
        self.student_container.setObjectName("student_container")

        self.Titre_Liste = QtWidgets.QLabel(self.centralwidget)
        self.Titre_Liste.setGeometry(QtCore.QRect(110, 10, 111, 16))
        self.Titre_Liste.setObjectName("Titre_Liste")

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(400, 0, 20, 551))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")

        self.Titre_Contraintes = QtWidgets.QLabel(self.centralwidget)
        self.Titre_Contraintes.setGeometry(QtCore.QRect(550, 10, 81, 16))
        self.Titre_Contraintes.setObjectName("Titre_Contraintes")


        self.Menu_Contrainte = QtWidgets.QSpinBox(self.centralwidget)
        self.Menu_Contrainte.setGeometry(QtCore.QRect(460, 70, 121, 22))
        self.Menu_Contrainte.setObjectName("Menu_Contrainte")

        # Bouton qui rajoute une ligne d'élève
        self.Bouton_AjouterEleve = QtWidgets.QPushButton(self.centralwidget)
        self.Bouton_AjouterEleve.setGeometry(QtCore.QRect(150, 40, 31, 21))
        self.Bouton_AjouterEleve.setObjectName("Bouton_AjouterEleve")
        self.Bouton_AjouterEleve.clicked.connect(self.add_student_row)

        self.Bouton_AjouterContrainte = QtWidgets.QPushButton(self.centralwidget)
        self.Bouton_AjouterContrainte.setGeometry(QtCore.QRect(420, 70, 16, 21))
        self.Bouton_AjouterContrainte.setObjectName("Bouton_AjouterContrainte")

        #Bouton pour supprimer une ligne d'élève
        self.Bouton_SupprimerEleve = QtWidgets.QPushButton(self.centralwidget)
        self.Bouton_SupprimerEleve.setGeometry(QtCore.QRect(180, 40, 31, 21))
        self.Bouton_SupprimerEleve.setObjectName("Bouton_SupprimerEleve")
        self.Bouton_SupprimerEleve.clicked.connect(self.remove_last_student_row)

        self.Titre_Boutons = QtWidgets.QLabel(self.centralwidget)
        self.Titre_Boutons.setGeometry(QtCore.QRect(20, 40, 131, 16))
        self.Titre_Boutons.setObjectName("Titre_Boutons")

        self.Bouton_SupprimerContrainte = QtWidgets.QPushButton(self.centralwidget)
        self.Bouton_SupprimerContrainte.setGeometry(QtCore.QRect(440, 70, 16, 21))
        self.Bouton_SupprimerContrainte.setObjectName("Bouton_AjouterContrainte")

        Window2.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(Window2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        Window2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Window2)
        self.statusbar.setObjectName("statusbar")
        Window2.setStatusBar(self.statusbar)

        self.retranslateUi(Window2)
        QtCore.QMetaObject.connectSlotsByName(Window2)

        # Ajouter la première ligne d'élève
        self.add_student_row()

    def retranslateUi(self, Window2):
        _translate = QtCore.QCoreApplication.translate
        Window2.setWindowTitle(_translate("Window2", "Liste et contraintes"))
        self.Titre_Liste.setText(_translate("Window2", "Liste de classe"))
        self.Titre_Contraintes.setText(_translate("Window2", "Contraintes"))
        self.Bouton_AjouterEleve.setText(_translate("Window2", "+"))
        self.Bouton_AjouterContrainte.setText(_translate("Window2", "+"))
        self.Bouton_SupprimerEleve.setText(_translate("Window2", "-"))
        self.Titre_Boutons.setText(_translate("Window2", "Ajouter/Enlever un élève"))
        self.Bouton_SupprimerContrainte.setText(_translate("Window2", "-"))

#Fonction pour ajouter une ligne d'élève
    def add_student_row(self):
        #Augmente le compteur
        self.student_counter += 1

        # Création du conteneur horizontal pour une ligne
        student_row = QtWidgets.QWidget(self.student_container)
        row_layout = QtWidgets.QHBoxLayout(student_row)
        row_layout.setSpacing(15)  # Espacement horizontal entre les widgets
        row_layout.setContentsMargins(5, 0, 5, 0)

        #Création des widgets
        #Numéro de l'élève
        Num = QtWidgets.QLabel(student_row)
        Num.setObjectName(f"Num_[{self.student_counter}")
        Num.setText(str(self.student_counter))
        Num.setFixedWidth(20)
        Num.setAlignment(QtCore.Qt.AlignCenter)
        row_layout.addWidget(Num)

        #Input prénom
        Text_Prenom = QtWidgets.QLineEdit(student_row)
        Text_Prenom.setObjectName(f"Text_Prenom{self.student_counter}")
        Text_Prenom.setPlaceholderText('Prénom')
        Text_Prenom.setFixedHeight(30)  # Hauteur fixe
        Text_Prenom.setFixedWidth(90)  # Largeur fixe pour uniformité
        row_layout.addWidget(Text_Prenom)

        #Input nom
        Text_Nom = QtWidgets.QLineEdit(student_row)
        Text_Nom.setObjectName(f"Text_Nom{self.student_counter}")
        Text_Nom.setPlaceholderText('Nom')
        Text_Nom.setFixedHeight(30)  # Hauteur fixe
        Text_Nom.setFixedWidth(90)  # Largeur fixe pour uniformité
        row_layout.addWidget(Text_Nom)

        #Radio box fille/garçon
        radioButton_Fille = QtWidgets.QRadioButton(student_row)
        radioButton_Fille.setObjectName(f"radioButton_Fille{self.student_counter}")
        radioButton_Fille.setText("Fille")
        radioButton_Fille.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        row_layout.addWidget(radioButton_Fille)

        radioButton_Garcon = QtWidgets.QRadioButton(student_row)
        radioButton_Garcon.setObjectName(f"radioButton_Garcon{self.student_counter}")
        radioButton_Garcon.setText("Garçon")
        radioButton_Garcon.setSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        row_layout.addWidget(radioButton_Garcon)

        # Création du QButtonGroup pour la ligne
        gender_group = QtWidgets.QButtonGroup(student_row)
        gender_group.addButton(radioButton_Fille)
        gender_group.addButton(radioButton_Garcon)
        gender_group.setExclusive(True)  # Assure que seule une option est sélectionnable

        #Ajout au layout principal
        self.student_layout.addWidget(student_row)

        #Enregistre les élèves dans une liste
        self.student_widgets.append({
            "Num": Num,
            "Text_Prenom": Text_Prenom,
            "Text_Nom": Text_Nom,
            "radioButton_Fille": radioButton_Fille,
            "radioButton_Garcon": radioButton_Garcon,
            "gender_group": gender_group,
            "row": student_row
        })

        self.student_container.update()

#Fonction qui supprime la dernière ligne d'élève créée
    def remove_last_student_row(self):
        if self.student_counter > 1:
            last_widgets = self.student_widgets.pop()
            self.student_layout.removeWidget(last_widgets["row"])  # Retire du layout
            last_widgets["row"].deleteLater() #Supprime le conteneur de la ligne
            self.student_counter -= 1